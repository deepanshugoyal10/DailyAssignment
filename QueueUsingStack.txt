package dailyassign;
import java.util.Scanner;
public class QueueUsingStack {

		 Node top;
		static class Node
		{
			int data;
			Node next;
			Node(int d)
			{
				data=d;
				next=null;
			}
		}
		QueueUsingStack()
		{
			top=null;
		}
		public  void push(int data)
		{
			Node temp=new Node(data);
			if(temp==null)
			{
				System.out.println("overflow");
				return;
			}
			else
			{
				temp.data=data;
				temp.next=top;
				top=temp;
			}
		}
		public  void pop()
		{
			if(top==null)
			{
				System.out.println("empty");
				return;
			}
			top=top.next;
		}
		public  void display()
		{
			Node current=top;
			while(current.next!=null)
			{
				System.out.print(current.data+" ");
				current=current.next;
			}
			System.out.print(current.data);
		}

		public  boolean isEmpty()
		{
			return top==null;
		}
		public  int peek(QueueUsingStack q1)
	    {
			if(!isEmpty())
			{
				return top.data;
			}
				else
				return -1;
	    }

	public static void main(String[] args)
	{
		Scanner sc=new Scanner(System.in);
		QueueUsingStack s1=new QueueUsingStack();
		QueueUsingStack s2=new QueueUsingStack();
		System.out.println("Enter number of Elements");
		int n=sc.nextInt();
		System.out.println("Enter data");
		for(int i=0;i<n;i++)
		{
			int d=sc.nextInt();
			s1.push(d);
		}
		for(int i=0;i<n;i++)
		{
		int z=s1.peek(s1);
			s1.pop();
			s2.push(z);
		}
		System.out.println("\nQueue is");
		s2.display();
		System.out.println("\nAfter Pop");
		s2.pop();
		s2.display();

	}

}
